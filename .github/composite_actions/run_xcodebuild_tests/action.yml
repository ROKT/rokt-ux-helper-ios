name: "Run unit tests"
description: "Action runs `xcodebuild test` on xcode 15.4"

inputs:
  use-swift-5:
    description: "The Swift version 5"
    required: true
    type: boolean
    default: true

runs:
  using: "composite"
  steps:
    - name: Set up Xcode 15
      if: ${{ inputs.use-swift-5 == 'true' }}
      uses: maxim-lobanov/setup-xcode@v1
      with:
        xcode-version: "15.4"

    - name: Run unit tests
      if: ${{ inputs.use-swift-5 == 'true' }}
      run: >
        set -o pipefail &&
        xcodebuild -skipPackagePluginValidation -scheme RoktUXHelper -destination 'platform=iOS Simulator,name=iPhone 15,OS=17.5' -enableCodeCoverage YES -derivedDataPath DerivedData clean build test
        | xcbeautify --renderer github-actions
      shell: bash

    - name: Set up Xcode 16
      if: ${{ inputs.use-swift-5 == 'false' }}
      uses: maxim-lobanov/setup-xcode@v1
      with:
        xcode-version: "16.1.0"

    - name: Run unit tests
      if: ${{ inputs.use-swift-5 == 'false' }}
      run: >
        set -o pipefail &&
        xcodebuild -skipPackagePluginValidation -scheme RoktUXHelper -destination 'platform=iOS Simulator,name=iPhone 16,OS=latest' -enableCodeCoverage YES -derivedDataPath DerivedData clean build test
        | xcbeautify --renderer github-actions
      shell: bash

    - name: Process coverage report
      description: "Process the coverage report into a format that works with the Codecov action"
      run: xcresultparser --output-format cobertura "$(find DerivedData/Logs/Test -name '*.xcresult' | head -n 1)" --project-root "$(pwd)" > "artifacts/coverage.xml"

    - name: Upload coverage report
      uses: codecov/codecov-action@v5
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        files: ./artifacts/coverage.xml
        flags: unittests
